<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.eldermoraes</groupId>
    <artifactId>ch02-cdi</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>

    <name>ch02-cdi</name>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.jboss.arquillian.drone.version>2.5.5</org.jboss.arquillian.drone.version>
		<shrinkwrap.version>3.1.4</shrinkwrap.version>
		<selenium.version>3.11.0</selenium.version>
		<org.wildfly.as.version>26.1.1.Final</org.wildfly.as.version> 
		<org.wildfly.core.version>18.1.1.Final</org.wildfly.core.version>
		<org.wildfly.arquillian.version>3.0.1.Final</org.wildfly.arquillian.version>
		<org.wildfly.maven.plugin.version>3.0.0.Final</org.wildfly.maven.plugin.version>
		<hibernate.search.version>5.10.12.Final</hibernate.search.version>
		<resteasy.version>3.15.3.Final</resteasy.version>
		<picketlink.version>2.5.5.SP12</picketlink.version>
		<lucene.version>5.5.5</lucene.version>
		<javaee.version>8.0</javaee.version>
		<awaitility-proxy.version>3.1.6</awaitility-proxy.version>
		<awaitility.version>4.1.1</awaitility.version>

		<!-- https://github.com/flashboss/rubia-forums/blob/2.2.3/pom.xml is latest jdk8 version -->
		<rubiaforums.version>2.2.3</rubiaforums.version>
		<subethasmtp.version>3.1.7</subethasmtp.version>
		<maven.surefire.plugin.version>2.22.0</maven.surefire.plugin.version>
		<maven.ejb.plugin.version>3.2.1</maven.ejb.plugin.version>
		<replacer.plugin.version>1.5.3</replacer.plugin.version>
		<testLogToFile>true</testLogToFile>
		<maven.deploy.skip>true</maven.deploy.skip>
		<ts.skipTests>${skipTests}</ts.skipTests>
		<enforcer.skip>true</enforcer.skip>
		<jakartaee-api.version>8.0.0</jakartaee-api.version> 
		<version.shrinkwrap.resolvers>3.1.4</version.shrinkwrap.resolvers>
		 <!-- Protocol to use for communication with remote maven repositories.
             You can set to 'http' if you are using a maven proxy and 'https'
             interferes with that. Use 'https' for builds that will be released
             to non-snapshot public maven repos -->
        <maven.repository.protocol>https</maven.repository.protocol>
        <!-- The full remote maven repo URL; can be overridden via -D for special use cases -->
        <maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url>   
    </properties>
    <repositories>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>${maven.repository.url}</url>
            <layout>default</layout>
        </repository>       
		<repository>
			<id>redhat-maven-ga-group</id>
			<name>Redhat GA Public Maven Repository Group</name>
			<url>https://maven.repository.redhat.com/ga/
            </url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
		 <!-- Remove below repo after opensaml 4.2.0 is accessible from maven central repo-->
        <repository>
            <id>opensaml-repo</id>
            <name>opensaml</name>
            <url>https://build.shibboleth.net/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>		
		<repository>
			<id>redhat-all-public-repository-group</id>
			<name>Redhat All Public Maven Repository Group</name>
			<url>http://maven.repository.redhat.com/techpreview/all/
            </url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>redhat-early-public-repository-group</id>
			<name>Redhat Early Public Maven Repository Group</name>
			<url>https://maven.repository.redhat.com/nexus/content/groups/product-earlyaccess/
            </url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>${maven.repository.url}</url>
        </pluginRepository>
    </pluginRepositories>    
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-utils</artifactId>
				<version>3.3.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.extension</groupId>
				<artifactId>arquillian-drone-bom</artifactId>
				<version>${org.jboss.arquillian.drone.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
			    <groupId>org.apache.maven.resolver</groupId>
			    <artifactId>maven-resolver</artifactId>
			    <!-- <version>1.8.0</version> -->
				<version>1.4.2</version>
			    <scope>import</scope>
			    <type>pom</type>
			</dependency>
			<!-- Import the core parent to get all the managed dependencies from core -->
			<dependency>
				<groupId>org.wildfly.core</groupId>
				<artifactId>wildfly-core-parent</artifactId>
				<type>pom</type>
				<version>${org.wildfly.core.version}</version>
				<scope>import</scope>
			</dependency>
      <!-- Override dependency resolver with latest version.
         This must go *BEFORE* the Arquillian BOM. -->
			<dependency>
				<groupId>org.jboss.shrinkwrap.resolver</groupId>
				<artifactId>shrinkwrap-resolver-bom</artifactId>
				<version>${version.shrinkwrap.resolvers}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.wildfly.arquillian</groupId>
				<artifactId>wildfly-arquillian-parent</artifactId>
				<version>${org.wildfly.arquillian.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.wildfly.arquillian</groupId>
				<artifactId>wildfly-arquillian-container-managed</artifactId>
				<version>${org.wildfly.arquillian.version}</version>
			</dependency>
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-jakartaee8-with-tools</artifactId>
                <version>${org.wildfly.as.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
		</dependencies>
	</dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakartaee-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.wildfly.arquillian</groupId>
			<artifactId>wildfly-arquillian-container-managed</artifactId>
			<scope>test</scope>
		</dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArguments>
                        <endorseddirs>${endorsed.dir}</endorseddirs>
                    </compilerArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>
	
	<profiles>
		<profile>
			<id>basic.integration.tests.profile</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<!-- Server configuration executions. -->
			<build>
				<testResources>
					<testResource>
						<directory>src/test/java</directory>
						<excludes>
							<exclude>**/*.java</exclude>
						</excludes>
					</testResource>
				</testResources>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.wildfly</groupId>
											<artifactId>wildfly-dist</artifactId>
											<version>${org.wildfly.as.version}</version>
											<type>zip</type>
											<overWrite>false</overWrite>
											<outputDirectory>target</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Sets general surefire system properties. These can be overridden 
						by inheriting plugin configurations. -->

					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.plugin.version}</version>
						<configuration>
							<skipTests>${ts.skipTests}</skipTests>
							<enableAssertions>true</enableAssertions>
							<!-- System properties to forked surefire JVM which runs clients. -->
							<failIfNoTests>false</failIfNoTests>
							<redirectTestOutputToFile>${testLogToFile}</redirectTestOutputToFile>
							<systemPropertyVariables>
								<jboss.home>${basedir}/target/wildfly-${org.wildfly.as.version}</jboss.home>
							</systemPropertyVariables>
						</configuration>
						<executions>

							<!-- Disable default-test execution. -->
							<execution>
								<id>default-test</id>
								<goals>
									<goal>test</goal>
								</goals>
								<phase>none</phase>
							</execution>
							<execution>
								<id>basic-integration-default-full.surefire</id>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<!-- Tests to execute. Overriden in webProfileExclusion.profile 
										. -->
									<includes>
										<include>it/vige/businesscomponents/injection/*TestCase.java</include>
									</includes>

									<!-- Parameters to test cases. -->
									<systemPropertyVariables
										combine.children="append">
										<jboss.server.config.file.name>standalone-full.xml</jboss.server.config.file.name>
										<jboss.options>-Dee8.preview.mode=true</jboss.options>
									</systemPropertyVariables>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
